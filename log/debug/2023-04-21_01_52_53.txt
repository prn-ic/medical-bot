01:52:53,806 asyncio [DEBUG]: Using proactor: IocpProactor
01:52:53,808 aiogram [DEBUG]: Make request: "getMe" with data: "{}" and files "None"
01:52:54,99 aiogram [DEBUG]: Response for getMe: [200] "'{"ok":true,"result":{"id":5421871737,"is_bot":true,"first_name":"MedicalBot","username":"OrskMedical_bot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
01:52:54,99 aiogram [INFO]: Bot: MedicalBot [@OrskMedical_bot]
01:52:54,99 aiogram [DEBUG]: Make request: "getWebhookInfo" with data: "{}" and files "None"
01:52:54,177 aiogram [DEBUG]: Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
01:52:54,178 aiogram [DEBUG]: Make request: "deleteWebhook" with data: "{'drop_pending_updates': True}" and files "None"
01:52:54,258 aiogram [DEBUG]: Response for deleteWebhook: [200] "'{"ok":true,"result":true,"description":"Webhook is already deleted"}'"
01:52:54,259 aiogram [WARNING]: Updates were skipped successfully.
01:52:54,259 aiogram.dispatcher.dispatcher [INFO]: Start polling.
01:52:54,259 aiogram [DEBUG]: Make request: "getWebhookInfo" with data: "{}" and files "None"
01:52:54,339 aiogram [DEBUG]: Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
01:52:54,339 aiogram [DEBUG]: Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
01:53:14,419 aiogram [DEBUG]: Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
01:53:14,535 aiogram [DEBUG]: Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
01:53:19,992 aiogram.dispatcher.dispatcher [INFO]: Stop polling...
01:53:19,993 aiogram [WARNING]: Goodbye!

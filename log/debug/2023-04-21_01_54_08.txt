[DEBUG] 01:54:08,714 (asyncio) : Using proactor: IocpProactor
[DEBUG] 01:54:08,716 (aiogram) : Make request: "getMe" with data: "{}" and files "None"
[DEBUG] 01:54:08,965 (aiogram) : Response for getMe: [200] "'{"ok":true,"result":{"id":5421871737,"is_bot":true,"first_name":"MedicalBot","username":"OrskMedical_bot","can_join_groups":true,"can_read_all_group_messages":false,"supports_inline_queries":false}}'"
[INFO] 01:54:08,965 (aiogram) : Bot: MedicalBot [@OrskMedical_bot]
[DEBUG] 01:54:08,965 (aiogram) : Make request: "getWebhookInfo" with data: "{}" and files "None"
[DEBUG] 01:54:09,44 (aiogram) : Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
[DEBUG] 01:54:09,45 (aiogram) : Make request: "deleteWebhook" with data: "{'drop_pending_updates': True}" and files "None"
[DEBUG] 01:54:09,126 (aiogram) : Response for deleteWebhook: [200] "'{"ok":true,"result":true,"description":"Webhook is already deleted"}'"
[WARNING] 01:54:09,126 (aiogram) : Updates were skipped successfully.
[INFO] 01:54:09,127 (aiogram.dispatcher.dispatcher) : Start polling.
[DEBUG] 01:54:09,127 (aiogram) : Make request: "getWebhookInfo" with data: "{}" and files "None"
[DEBUG] 01:54:09,208 (aiogram) : Response for getWebhookInfo: [200] "'{"ok":true,"result":{"url":"","has_custom_certificate":false,"pending_update_count":0}}'"
[DEBUG] 01:54:09,208 (aiogram) : Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
[DEBUG] 01:54:29,290 (aiogram) : Response for getUpdates: [200] "'{"ok":true,"result":[]}'"
[DEBUG] 01:54:29,397 (aiogram) : Make request: "getUpdates" with data: "{'timeout': 20}" and files "None"
[INFO] 01:54:33,509 (aiogram.dispatcher.dispatcher) : Stop polling...
[WARNING] 01:54:33,510 (aiogram) : Goodbye!

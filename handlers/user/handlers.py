from aiogram import types, Dispatcher
from utils.database.questions import get_answer
from keyboards.keyboards import welcome_keyboard, user_main_keyboard, user_information_keyboard, go_menu_keyboard


async def help_command(message: types.Message):
    await message.answer('–í—ã–±—Ä–∞–Ω')
    await message.answer(get_answer('user_help'), reply_markup=welcome_keyboard, parse_mode="Markdown")


async def get_info(message: types.Message):
    await message.answer('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', reply_markup=go_menu_keyboard)
    await message.answer("üìç –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", reply_markup=user_information_keyboard)


async def go_menu(message: types.Message):
    await message.answer('‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é', reply_markup=user_main_keyboard, parse_mode="Markdown")


async def ask_a_question(message: types.Message):
    await message.answer('‚úâÔ∏è –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n'
                         '``` /ask [–≤–æ–ø—Ä–æ—Å]```\n'
                         '–ü—Ä–∏–º–µ—Ä:\n'
                         '``` /ask –ö—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–≤—Ç—Ä–∞?```', reply_markup=go_menu_keyboard,
                         parse_mode="Markdown")


def register_handlers_user(dp: Dispatcher):
    dp.register_message_handler(help_command, commands=['help'])
    dp.register_message_handler(get_info, lambda message: message.text == '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    dp.register_message_handler(get_info, commands=['info'])
    dp.register_message_handler(go_menu, commands=['menu'])
    dp.register_message_handler(go_menu, lambda message: message.text == '‚Ü©Ô∏è –í –º–µ–Ω—é')
    dp.register_message_handler(ask_a_question, lambda message: message.text == '‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')

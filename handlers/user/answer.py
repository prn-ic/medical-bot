from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from database.query.get import get_question
from database.query.get import get_same_answers, get_answer_by_id
from keyboards.keyboards import not_found_answer_keyboard, go_menu_keyboard
from utils.states import SearchState


async def ask_a_question(message: types.Message, state: FSMContext):
    await message.answer("üîé –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∏–∂–µ: ")
    await state.set_state(SearchState.search_value)


async def get_question_answer(message: types.Message, state: FSMContext):
    await message.answer(f'üîé –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç ...')

    questions = get_same_answers(message.text.lower())

    keyboard = types.InlineKeyboardMarkup()

    if len(questions) == 0:
        await message.answer('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ —Å–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å\n'
                             '–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π,'
                             ' –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∑–∞–Ω–æ–≤–æ',
                             reply_markup=not_found_answer_keyboard)
    else:
        for answer in questions:
            question = get_question(answer)
            keyboard.add(types.InlineKeyboardButton(question.command_name,
                                                    callback_data=f'search_by '
                                                                  f'{question.id}'))
        await message.answer('üîé –ù–∞—à–ª–∏ –¥–ª—è –≤–∞—Å —á—Ç–æ-—Ç–æ –ø–æ—Ö–æ–∂–µ–µ.\n'
                             '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º '
                             '–ø–æ–¥—Ö–æ–¥–∏—Ç:', reply_markup=keyboard)

    await state.finish()


async def search_by_id_callback(callback: types.CallbackQuery):
    text = f'üì≠**–û—Ç–≤–µ—Ç:** \n' \
           f'{get_answer_by_id(callback.data.replace("search_by ", ""))}'

    await callback.message.answer(text,
                                  reply_markup=go_menu_keyboard,
                                  parse_mode='Markdown')


def register_answer_handler(dp: Dispatcher):
    dp.register_message_handler(ask_a_question,
                                lambda message: message.text == '‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
                                state=None)
    dp.register_message_handler(get_question_answer,
                                lambda message: message.text == '‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',
                                state=SearchState.search_value)
    dp.register_message_handler(get_question_answer, state=SearchState.search_value)
    dp.register_callback_query_handler(search_by_id_callback,
                                       Text(startswith='search_by '))
